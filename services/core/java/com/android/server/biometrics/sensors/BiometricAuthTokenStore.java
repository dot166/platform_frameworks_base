package com.android.server.biometrics.sensors;

import android.hardware.fingerprint.FingerprintManager;
import android.hardware.fingerprint.FingerprintManager.AddPendingAuthTokenResult;
import android.security.KeyStoreAuthorization;
import android.util.Slog;
import android.util.SparseArray;

/**
 * Store for hardware auth tokens that were generated by successful biometric auth and are waiting
 * for second factor to succeed before being added to KeyStore.
 */
public class BiometricAuthTokenStore {
    // TODO: Zero tokens as soon as they are finished with? I don't think upstream does this.

    private static final String TAG = "BiometricAuthTokenStore";

    private final SparseArray<byte[]> mPendingSecondFactorAuthTokens;
    private final KeyStoreAuthorization mKeyStoreAuthorization;

    public BiometricAuthTokenStore(KeyStoreAuthorization keyStore) {
        mKeyStoreAuthorization = keyStore;
        mPendingSecondFactorAuthTokens = new SparseArray<>();
    }

    public void storePendingAuthToken(int userId, byte[] token) {
        synchronized (mPendingSecondFactorAuthTokens) {
            mPendingSecondFactorAuthTokens.put(userId, token);
        }
    }

    public byte[] getPendingAuthToken(int userId) {
        synchronized (mPendingSecondFactorAuthTokens) {
            return mPendingSecondFactorAuthTokens.get(userId);
        }
    }

    public void clearPendingAuthTokens() {
        synchronized (mPendingSecondFactorAuthTokens) {
            mPendingSecondFactorAuthTokens.clear();
        }
    }

    public @AddPendingAuthTokenResult int addPendingAuthTokenToKeyStore(int userId) {
        synchronized (mPendingSecondFactorAuthTokens) {
            byte[] authToken = mPendingSecondFactorAuthTokens.get(userId);
            if (authToken == null) {
                return FingerprintManager.ERROR_NO_PENDING_AUTH_TOKEN;
            }
            final int result = mKeyStoreAuthorization.addAuthToken(authToken);
            mPendingSecondFactorAuthTokens.remove(userId);
            if (result != 0) {
                Slog.e(TAG, "Error adding auth token: " + result);
                return FingerprintManager.ERROR_UNABLE_TO_ADD_AUTH_TOKEN_TO_KEYSTORE;
            }

            Slog.d(TAG, "Successfully added auth token to keystore");
            return FingerprintManager.SUCCESS;
        }
    }
}
